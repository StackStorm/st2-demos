---
version: '1.0'
description: Provision vSLX chassis.
input:
  - host_ip
  - host_usr
  - host_pwd
  - chassis_name
  - chassis_type
  - chassis_linecards
  - os_dist_path
  - mgmt_ip
  - mgmt_mask
  - mgmt_gw
tasks:
  install_pwdless_ssh_dependency:
    action: core.local
    input:
      cmd: sudo apt-get install sshpass
    next:
      - when: '{{ succeeded() }}'
        do:
          - config_pwdless_ssh
  config_pwdless_ssh:
    action: core.local
    input:
      cmd: sudo sshpass -p <% ctx().host_pwd %> ssh-copy-id -i /home/stanley/.ssh/stanley_rsa.pub <% ctx().host_usr %>@<% ctx().host_ip %>
    next:
      - when: '{{ succeeded() }}'
        do:
          - create_new_chassis
  create_new_chassis:
    action: core.remote
    input:
      hosts: <% ctx().host_ip %>
      cmd: vsh create chassis <% ctx().chassis_name %> <% ctx().chassis_type %> 1 <% ctx().chassis_linecards %> <% ctx().os_dist_path %>
      username: <% ctx().host_usr %>
      timeout: 1800
    next:
      - when: '{{ succeeded() }}'
        do:
          - power_on_chassis
  power_on_chassis:
    action: core.remote
    input:
      hosts: <% ctx().host_ip %>
      cmd: vsh poweron <% ctx().chassis_name %>
      username: <% ctx().host_usr %>
    next:
      - when: '{{ succeeded() }}'
        do:
          - add_mgmt_ip_to_chassis
  add_mgmt_ip_to_chassis:
    action: vslx.vslx_add_static_mgmt_ip
    input:
      host: <% ctx().host_ip %>
      username: <% ctx().host_usr %>
      password: <% ctx().host_pwd %>
      timeout: 900
      ip_addr: <% ctx().mgmt_ip %>
      cidr_mask: <% ctx().mgmt_mask %>
      gateway: <% ctx().mgmt_gw %>
